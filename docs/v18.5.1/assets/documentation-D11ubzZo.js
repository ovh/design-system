import{j as e,M as d,C as p}from"./index-DQsySnuC.js";import{u as m}from"./index-Xj8pMhSr.js";import{F as a,O as c}from"./form-field.stories-BgeD7QQ_.js";import{B as h}from"./Banner-dX9z1ZOn.js";import{I as u,A as x,B as f}from"./IdentityCard-g99iR_Ue.js";import{H as r}from"./Heading-DDc_MF2r.js";import{S as o,O as n,a as i}from"./StorybookLink-CYVmf1as.js";import"./iframe-DRtgxPEL.js";import"../sb-preview/runtime.js";import"./index-8AfNH5n5.js";import"./index-D-8MO0q_.js";import"./index-DrFu-skq.js";import"./ods-form-field2-Tc9B1-rj.js";import"./index-DAZhnxgO.js";import"./controls-DX883vx3.js";import"./unsafe-html-VJzuFJfF.js";import"./index-DCBH0_Tl.js";import"./index-CihiY_f6.js";import"./ods-accordion2-Bgg69lRV.js";import"./icon-name-C6aMXAXT.js";import"./ods-icon2-Bl6f3POv.js";import"./ods-badge-tHc24Eg4.js";import"./ods-breadcrumb-item2-CoLTn2CF.js";import"./ods-link2-DDMr4sUm.js";import"./ods-button2-Bhm26DQr.js";import"./ods-spinner2-DCN2yKlT.js";import"./ods-card-B_VebKXk.js";import"./ods-checkbox2-BOuFx8yF.js";import"./dom-CO1DdTQY.js";import"./ods-clipboard2-NuJn2ry3.js";import"./ods-input2-B9cw61K_.js";import"./type-B5zI8QxY.js";import"./ods-tooltip2-BwzEvmuE.js";import"./overlay-KZpfSxWH.js";import"./ods-code2-bZeM2NI-.js";import"./ods-datepicker2-DwwUrg1C.js";import"./locale-NOa-Gxlr.js";import"./ods-divider-3cgmT4wP.js";import"./ods-divider2-Dc25YIYb.js";import"./ods-drawer2-DsENZFv4.js";import"./ods-file-upload2-CPd6D9Z5.js";import"./ods-progress-bar2-BuFm8qT0.js";import"./ods-icon-NURRZ9Mf.js";import"./ods-link-BE9dMQzg.js";import"./ods-medium2-BB_NU63C.js";import"./ods-message-B9bD81Bu.js";import"./ods-modal2-CP36WQeg.js";import"./ods-pagination2-CotgNPzL.js";import"./ods-select2-B4wr0dem.js";import"./ods-password2-BQKXsiEd.js";import"./ods-phone-number2-D1K1HcDS.js";import"./ods-popover2-hre_XUC2.js";import"./ods-quantity2-DOjRn13r.js";import"./ods-radio2-BtBodUES.js";import"./ods-range2-BhwU834C.js";import"./ods-skeleton2-dZcgHYAN.js";import"./ods-switch-item2-m1p75_3x.js";import"./ods-tabs2-wJlXfoZt.js";import"./ods-table2-vWlGUOoj.js";import"./ods-tag2-Dj0-zHXw.js";import"./ods-text-CTeC-41B.js";import"./ods-textarea2-BHQdu6bK.js";import"./ods-timepicker2-2oCWgeQp.js";import"./ods-toggle2-DbSuYqWU.js";function l(s){const t={em:"em",img:"img",p:"p",span:"span",strong:"strong",...m(),...s.components};return e.jsxs(e.Fragment,{children:[e.jsx(d,{of:a,name:"Documentation"}),`
`,e.jsx(h,{of:a}),`
`,e.jsx(t.p,{children:e.jsxs(t.em,{children:["A ",e.jsx(t.strong,{children:"Form Field"})," component is used to wrap several form components with logic, visual hints and additional styling"]})}),`
`,e.jsx(p,{of:c,sourceState:"none"}),`
`,e.jsx(r,{label:"Overview",level:2}),`
`,e.jsx(u,{aliases:["Form Control"],atomicType:x.molecule,figmaLink:"https://www.figma.com/design/9jDDTcR4a9jPRFcdjawAlf/ODS---UI-Kit?node-id=172-11996",githubUrl:"https://github.com/ovh/design-system/tree/master/packages/ods/src/components/form-field",name:"Form Field",relatedComponents:[{name:"Checkbox",subtitle:"Form elements"},{name:"File Upload",subtitle:"Form elements"},{name:"Input",subtitle:"Form elements"},{name:"Password",subtitle:"Form elements"},{name:"Phone Number",subtitle:"Form elements"},{name:"Quantity",subtitle:"Form elements"},{name:"Radio",subtitle:"Form elements"},{name:"Range",subtitle:"Form elements"},{name:"Select",subtitle:"Form elements"},{name:"Switch",subtitle:"Form elements"},{name:"Textarea",subtitle:"Form elements"},{name:"Timepicker",subtitle:"Form elements"},{name:"Toggle",subtitle:"Form elements"}],children:e.jsxs(t.p,{children:["A ",e.jsx(t.strong,{children:"Form Field"}),` is based on a single form element or group components as a whole that are decorated with additional
`,e.jsx(o,{kind:n.text,label:"Text",story:i.documentation}),` to handle specific types of information, like a
`,e.jsx(o,{kind:n.password,label:"Password",story:i.documentation})," field for example."]})}),`
`,e.jsx(r,{label:"Anatomy",level:2}),`
`,e.jsx(t.p,{children:e.jsx(t.img,{src:"components/form-field/anatomy.png",alt:"Component anatomy",title:"Component anatomy"})}),`
`,e.jsx(r,{label:"Usage",level:2}),`
`,e.jsxs(t.p,{children:["A ",e.jsx(t.strong,{children:"Form Field"})," is used to wrap a field that can be customized with some additional information about this field."]}),`
`,e.jsx(t.p,{children:"Additional information (label, placeholder, helper message) provides hint and help to users, so that they can easily understand what is required from them in a form."}),`
`,e.jsx(t.p,{children:"Users will also type or enter information in the expected format and avoid mistakes."}),`
`,e.jsx(r,{label:"Dos & Don'ts",level:3}),`
`,e.jsx(f,{donts:[e.jsxs(t.span,{children:["- Use a Form Field for content longer than a single line: Use a ",e.jsx(o,{kind:n.textarea,label:"Textarea",story:i.documentation})," instead"]}),e.jsxs(t.span,{children:["- Use an Input when you have a predefined list of answers: use a ",e.jsx(o,{kind:n.select,label:"Select",story:i.documentation})," or ",e.jsx(o,{kind:n.radio,label:"Radio",story:i.documentation})," Buttons instead"]}),"- Use * to mark the mandatory fields","- Overuse content related Form Fields with top aligned label in one group since it requires quite vertical space: split into smaller groups",e.jsxs(t.span,{children:["- Use interactive content such as a ",e.jsx(o,{kind:n.link,label:"Link",story:i.documentation})," or a ",e.jsx(o,{kind:n.button,label:"Button",story:i.documentation})," inside the Form Field label"]})],dos:["- Use several Form Fields for strongly related content and/or fields","- Use a Form Fields to help users to fill in a form",e.jsxs(t.span,{children:["- Remember to use a field with a length proportional to the expected user ",e.jsx(o,{kind:n.input,label:"Input",story:i.documentation})]}),"- Group when you need to combine related components into a whole new one"]}),`
`,e.jsx(r,{label:"Placement",level:2}),`
`,e.jsxs(t.p,{children:["A ",e.jsx(t.strong,{children:"Form Field"})," can be used everywhere in a page where there is a form and users may need help to fill in this form."]}),`
`,e.jsx(r,{label:"Behavior",level:2}),`
`,e.jsxs(t.p,{children:["A ",e.jsx(t.strong,{children:"Form Field"})," can react to a field validation, especially on its border and in addition to a helper (if necessary)."]}),`
`,e.jsxs(t.p,{children:["If the field is in error state, an error message is displayed below the helper ",e.jsx(o,{kind:n.text,label:"Text",story:i.documentation})," when it exists. When no helper ",e.jsx(o,{kind:n.text,label:"Text",story:i.documentation})," exists, the error message is displayed below the form component."]}),`
`,e.jsx(r,{label:"Variation",level:2}),`
`,e.jsx(t.p,{children:"N/A"}),`
`,e.jsx(r,{label:"Accessibility",level:2}),`
`,e.jsxs(t.p,{children:["Label, helpers and extra field information have to be readable to the user when navigating in on a ",e.jsx(t.strong,{children:"Form Field"}),"."]}),`
`,e.jsx(t.p,{children:"For the center part, the reading order for screen readers is components from left to right."})]})}function Ae(s={}){const{wrapper:t}={...m(),...s.components};return t?e.jsx(t,{...s,children:e.jsx(l,{...s})}):l(s)}export{Ae as default};
