import{j as e}from"./jsx-runtime-Cfl8ynUo.js";import{useMDXComponents as r}from"./index-ZwkxtaJJ.js";import{M as l,C as c}from"./index-MSKBj7dO.js";import{T as i,O as d}from"./text.stories-Dc8C893p.js";import{B as p}from"./Banner-BZtChV1g.js";import{I as h,B as m}from"./IdentityCard-BnvyxLnN.js";import{E as o}from"./ExternalLink-izdABMGv.js";import{H as t}from"./Heading-Dphh9YsV.js";import"./index-jIWwRBLr.js";import"./iframe-Cbr9ww7Z.js";import"./index-DWDEzXrj.js";import"./index-N93khynk.js";import"./index-CXQShRbs.js";import"./index-DrFu-skq.js";import"./Text-vMb3-i8V.js";import"./index-CqY9YpN0.js";import"./controls-BtiQQn1l.js";import"./ods-react60-CRx7zEey.js";import"./index-2w0W-O47-BJ19ihbZ.js";import"./Link-BWQEuWpd-DsrdP0qI.js";import"./ods-react235-aAAP9SXj.js";function a(s){const n={em:"em",p:"p",strong:"strong",...r(),...s.components};return e.jsxs(e.Fragment,{children:[e.jsx(l,{of:i,name:"Documentation"}),`
`,e.jsx(p,{of:i}),`
`,e.jsx(n.p,{children:e.jsxs(n.em,{children:["The ",e.jsx(n.strong,{children:"Text"})," component is used to display and style text content within an application."]})}),`
`,e.jsx(c,{of:d,sourceState:"none"}),`
`,e.jsx(t,{label:"Overview",level:2}),`
`,e.jsxs(h,{aliases:["Paragraph"],figmaLink:"https://www.figma.com/design/9jDDTcR4a9jPRFcdjawAlf/ODS---UI-Kit?node-id=172-12061",githubUrl:"https://github.com/ovh/design-system/tree/master/packages/ods-react/src/components/text",name:"Text",children:[e.jsxs(n.p,{children:["The ",e.jsx(n.strong,{children:"Text"})," component is a fundamental UI element for displaying text content."]}),e.jsx(n.p,{children:`It supports various presets of styles, sizes, and weights to cater to different textual content requirements such as
paragraphs, headings, and inline text.`}),e.jsx(n.p,{children:"The component can be extra customized to fit the design and branding needs of the application."})]}),`
`,e.jsx(t,{label:"Usage",level:2}),`
`,e.jsxs(n.p,{children:["The ",e.jsx(n.strong,{children:"Text"})," component provides predefined text styles (font size, color, weight, etc.) to ensure visual consistency across the application."]}),`
`,e.jsx(n.p,{children:"It is ideal when you want to apply a ready-made text style from the OVHcloud Design System without manually setting typography values."}),`
`,e.jsx(n.p,{children:"It is not meant for custom typography needs like overriding styles to match a specific heading or layout."}),`
`,e.jsx(n.p,{children:"If the available presets don't fit your use case, use the appropriate semantic HTML tag with your own styling instead."}),`
`,e.jsx(t,{label:"Dos & Don'ts",level:3}),`
`,e.jsx(m,{donts:["- Don't skip heading levels (e.g., using heading-3 directly after heading-1), this harms accessibility and user comprehension","- Don't override the semantic tag of a preset (e.g., using heading-2 styled as a div)","- Don't use Text components just to apply a visual style, consider whether semantic meaning is appropriate","- Don't use too many different font sizes and weights on a single view, it creates visual noise and weakens the hierarchy"],dos:["- Use Text presets to ensure visual and semantic consistency across your UI","- Respect a logical heading hierarchy (e.g., h2 follows h1, etc.) for accessibility and SEO","- Use Text component to convey meaning and structure, not only appearance","- Choose the appropriate preset for readability and emphasis, depending on the context","- Ensure sufficient color contrast between text and background for readability and accessibility"]}),`
`,e.jsx(t,{label:"Placement",level:2}),`
`,e.jsxs(n.p,{children:[e.jsx(n.strong,{children:"Text"})," can be used everywhere in a page as long as levels and heading hierarchy are respected."]}),`
`,e.jsx(n.p,{children:"It can stand alone or be included in other components depending on the usage."}),`
`,e.jsx(t,{label:"Behavior",level:2}),`
`,e.jsxs(n.p,{children:["Based on its informational manner, the ",e.jsx(n.strong,{children:"Text"})," default behavior is being read-only."]}),`
`,e.jsx(n.p,{children:"The user can only select its content if needed."}),`
`,e.jsx(t,{label:"Navigation",level:2}),`
`,e.jsxs(n.p,{children:["The ",e.jsx(n.strong,{children:"Text"})," component is non-interactive and does not receive keyboard focus. It is purely visual and serves to display textual content without affecting keyboard navigation."]}),`
`,e.jsx(t,{label:"Accessibility",level:2}),`
`,e.jsxs(n.p,{children:["This component complies with the ",e.jsx(o,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/Heading_Elements",children:"h1 to h6"}),", ",e.jsx(o,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/p",children:"p"}),", ",e.jsx(o,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/label",children:"label"}),", ",e.jsx(o,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/span",children:"span"})," and ",e.jsx(o,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/code",children:"code"})," HTML elements."]})]})}function C(s={}){const{wrapper:n}={...r(),...s.components};return n?e.jsx(n,{...s,children:e.jsx(a,{...s})}):a(s)}export{C as default};
