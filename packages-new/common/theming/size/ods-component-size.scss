@import './ods-theming-size';
@import './ods-size-definitions';

/// @access private
@mixin ods-for-variant-size($component-size-definition, $variant, $size-name) {
  $size-properties: ods-get-size-properties($component-size-definition, $size-name);
  $variant-selector: if($variant, '[variant=#{$variant}]', '');
  #{$variant-selector}[size='#{$size-name}'] {
    @content($size-properties);
  }
}

/// retrieve size definition of the component and apply it for each defined size.
/// If you pass the optional variant's name, the selector will be generated with this variant.
/// example:
///    @include ods-foreach-theme-size(button) using ($sizes) {
///      :host(&) {
///        button {
///          height: ods-get-size-value($sizes, height);
///        }
///      }
///    };
///
/// will generate:
/// :host([size='sm']) button {
///   height: var(--ods-size-button-sm-height); }
///
/// :host([size='md']) button {
///   height: var(--ods-size-button-md-height); }
///
/// with:
/// ods-foreach-theme-size(button, flat)
/// it generate:
/// :host([variant='flat'][size='sm']) button
/// [...]
@mixin ods-foreach-theme-size($component-name, $variant: null) {
  $component-size-definition: ods-get-component-size-definition($ods-size-definitions, $component-name);

  @each $size-name, $size-properties in $component-size-definition {
    @include ods-for-variant-size($component-size-definition, $variant, $size-name) using ($sizes) {
      @content($sizes);
    };
  }
}
