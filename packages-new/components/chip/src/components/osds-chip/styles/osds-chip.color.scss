@import '~@ovhcloud/ods-theming/color/ods-component-color';
@import './osds-chip.mixins';

@mixin osds-chip-theme-color-variant-flat() {

  @include ods-and-all-hue-foreach-theme-color((
          color: '800',
          background-color: '100'
  )) using($colors) {
    @include osds-chip-on-selected-host() {
      color: map_get($colors, color);
      background-color: map_get($colors, background-color);
    }
  }

  &[contrasted] {
    @include ods-and-all-hue-foreach-theme-color((
            color: '500',
            background-color: '500-contrasted'
    )) using($colors) {
      @include osds-chip-on-selected-host() {
        color: map_get($colors, color);
        background-color: map_get($colors, background-color);
      }
    }
  }

  &:not([disabled])[selectable] {
    @include ods-and-one-hue-foreach-theme-color('200') using($color) {
      :host(&:hover), :host(&:focus), :host(&:active) {
        background-color: $color;
      }
    }

    @include ods-and-one-hue-foreach-theme-color('500') using($color) {
      :host(&:active) {
        border-color: $color;
      }
    }

    &[contrasted] {
      @include ods-and-one-hue-foreach-theme-color('100') using($color) {
        :host(&:hover), :host(&:focus) {
          background-color: $color;
        }
      }
      @include ods-and-one-hue-foreach-theme-color('200') using($color) {
        :host(&:active) {
          background-color: $color;
        }
      }
    }
  }
}


@mixin osds-chip-theme-color-variant-stroked() {
  @include osds-chip-on-selected-host() {
    background-color: initial;
  }

  @include ods-and-all-hue-foreach-theme-color((
          color: '500',
          border-color: '500'
  )) using($colors) {
    @include osds-chip-on-selected-host() {
      color: map_get($colors, color);
      border-color: map_get($colors, border-color);
    }
  }

  &[contrasted] {
    @include ods-and-all-hue-foreach-theme-color((
            color: '500-contrasted',
            border-color: '500-contrasted'
    )) using($colors) {
      @include osds-chip-on-selected-host() {
        color: map_get($colors, color);
        border-color: map_get($colors, border-color);
      }
    }
  }

  &:not([disabled])[selectable] {
    @include ods-and-one-hue-foreach-theme-color('100') using($color) {
      :host(&:hover), :host(&:focus) {
        background-color: $color;
      }
    }

    &[contrasted] {
      @include ods-and-all-hue-foreach-theme-color((
              background-color: '100',
              border-color: '100',
              color: '100-contrasted'
      )) using($colors) {
        :host(&:hover), :host(&:focus) {
          background-color: map_get($colors, background-color);
          border-color: map_get($colors, border-color);
          color: map_get($colors, color);
        }
      }
    }
  }

  &:not([disabled])[selectable] {
    @include ods-and-one-hue-foreach-theme-color('200') using($color) {
      :host(&:active) {
        background-color: $color;
      }
    }

    &[contrasted] {
      @include ods-and-all-hue-foreach-theme-color((
              background-color: '200',
              border-color: '200',
              color: '200-contrasted',
      )) using($colors) {
        :host(&:active) {
          background-color: map_get($colors, background-color);
          border-color: map_get($colors, border-color);
          color: map_get($colors, color);
        }
      }
    }
  }
}


@mixin osds-chip-theme-color() {

  /** base colors */
  :host {
    border-color: transparent;
  }

  /** disabled colors */
  [disabled] {
    @include osds-chip-on-selected-host() {
      opacity: .5;
    }
  }

  /** no variant specified: flat variant colors */
  :not([variant]) {
    @include osds-chip-theme-color-variant-flat();
  }
  /** flat variant colors */
  [variant='flat'] {
    @include osds-chip-theme-color-variant-flat();
  }

  /** stroked variant colors */
  [variant='stroked'] {
    @include osds-chip-theme-color-variant-stroked();
  }
}
