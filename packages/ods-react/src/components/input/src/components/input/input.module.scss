@use '../../../../../style/focus';
@use '../../../../../style/input';
@use '../../../../../style/state';

@layer ods-atoms {
  .input {
    $input: &;

    --ods-input-border-color: var(--ods-theme-input-border-color);
    --ods-input-border-color-invalid: var(--ods-theme-input-text-color-invalid);
    --ods-input-border-radius: var(--ods-theme-input-border-radius); // calc?
    --ods-input-border-width: var(--ods-theme-input-border-width); // calc?
    --ods-input-height: var(--ods-theme-input-height);
    --ods-input-padding-horizontal: var(--ods-theme-input-padding-horizontal);
    --ods-input-padding-vertical: var(--ods-theme-input-padding-vertical);
    --ods-input-text-color: var(--ods-theme-input-text-color);

    @include input.ods-input();

    display: inline-flex;
    flex-flow: row;
    column-gap: 4px; // TODO spacing

    &:focus-within {
      &:not(:has(button:focus-within)) {
        @include focus.ods-focus();
      }
    }

    &:not([data-disabled])[data-readonly] {
      @include state.ods-is-readonly();
    }

    &[data-disabled] {
      @include state.ods-is-disabled();
    }

    &#{$input}[data-invalid] {
      @include input.ods-input-error();
    }

    &--with-actions {
      padding-right: input.$ods-input-actions-padding-right; // TODO spacing
    }

    &__field {
      border: none;
      background-color: inherit;
      cursor: inherit;
      padding: 0;
      width: 100%;
      color: inherit;
      font-family: inherit;
      font-size: inherit;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        appearance: none;
        margin: 0;
      }

      &::placeholder {
        color: input.$ods-input-placeholder-color;
      }

      &:focus {
        outline: none;
      }

      &[type="number"] {
        appearance: textfield;
      }

      &[type="search"]::-webkit-search-cancel-button,
      &[type="search"]::-webkit-search-decoration {
        appearance: none;
      }
    }
  }
}
