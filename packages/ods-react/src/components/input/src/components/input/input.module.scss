@use '../../../../../style/focus';
@use '../../../../../style/input';
@use '../../../../../style/state';

@layer ods-atoms {
  .input {
    $input: &;

    @include input.ods-input();

    display: inline-flex;
    flex-flow: row;
    column-gap: 4px;

    &:focus-within {
      &:not(:has(button:focus-within)) {
        @include focus.ods-focus();
      }
    }

    &:not([data-disabled])[data-readonly] {
      @include state.ods-is-readonly();
    }

    &[data-disabled] {
      @include state.ods-is-disabled();
    }

    &#{$input}[data-invalid] {
      @include input.ods-input-error();
    }

    &--with-actions {
      padding-right: input.$ods-input-actions-padding-right;
    }

    &__field {
      border: none;
      background-color: inherit;
      cursor: inherit;
      padding: 0;
      width: 100%;
      color: inherit;
      font-family: inherit;
      font-size: inherit;

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        appearance: none;
        margin: 0;
      }

      &::placeholder {
        color: input.$ods-input-placeholder-color;
      }

      &:focus {
        outline: none;
      }

      &[type="number"] {
        appearance: textfield;
      }

      &[type="search"]::-webkit-search-cancel-button,
      &[type="search"]::-webkit-search-decoration {
        appearance: none;
      }
    }

    &__actions {
      display: inline-flex;
      flex-flow: row;
      align-items: center;
    }
  }
}
