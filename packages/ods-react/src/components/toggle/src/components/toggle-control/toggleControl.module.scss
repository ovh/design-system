@use '../../../../../style/focus';
@use '../../../../../style/state';

@layer ods-atoms {
  .toggle-control {
    $control: &;

    box-sizing: border-box;
    display: inline-block;
    position: relative;
    border: 1px solid var(--ods-color-neutral-200); // TODO
    border-radius: 1rem;
    background-color: var(--ods-color-neutral-200); // TODO
    width: 48px;
    height: 24px;

    &:hover,
    &[data-focus] {
      border-color: var(--ods-color-neutral-300); // TODO
      background-color: var(--ods-color-neutral-300); // TODO
    }

    &[data-focus] {
      @include focus.ods-focus();
    }

    &[data-disabled] {
      @include state.ods-is-disabled();

      border-color: state.$ods-state-is-disabled-background-color;
    }

    &[data-state="checked"] {
      &:not([data-disabled]) {
        transition: background-color 0.2s ease, border-color 0.2s ease;
        border-color: var(--ods-color-primary-500); // TODO
        background-color: var(--ods-color-primary-500); // TODO

        &:hover, &[data-focus] {
          border-color: var(--ods-color-primary-700); // TODO
          background-color: var(--ods-color-primary-700); // TODO

          &[data-invalid] {
            border-color: var(--ods-theme-input-border-color-invalid);
          }
        }

        &[data-invalid] {
          background-color: var(--ods-color-form-element-background-selected-critical); // TODO
        }
      }

      #{$control}__thumb {
        transform: translateX(24px);
      }
    }

    &#{$control}[data-invalid] {
      border-color: var(--ods-theme-input-border-color-invalid);
    }

    &__thumb {
      position: absolute;
      bottom: 1px;
      left: 1px;
      transform: translateX(0);
      transition: transform 0.4s ease;
      z-index: 2;
      margin: auto;
      border-radius: 16px;
      background-color: var(--ods-color-neutral-000); // TODO
      width: 20px;
      height: 20px;

      &:not([data-disabled]) {
        box-shadow: rgba(0, 0, 0, 0.25) 0 1px 1px 0; // TODO?
      }
    }
  }
}
