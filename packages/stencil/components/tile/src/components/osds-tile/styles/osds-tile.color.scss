@import '~@ovhcloud/ods-theming/color/ods-component-color';
@import './osds-tile.mixins';

@mixin osds-tile-theme-color-variant-flat() {
  @include ods-and-all-hue-foreach-theme-color((
          background-color: '000',
          border-color: '000'
  )) using($colors) {
    @include osds-tile-on-selected-host() {
      border-color: map_get($colors, border-color);
      background-color: map_get($colors, background-color);
    }
  }

  &[hoverable]:not([disabled]) {
    @include ods-and-one-hue-foreach-theme-color('100') using($color) {
      :host(&:hover) {
        border-color: $color;
        background-color: $color;
      }
    }
    @include ods-and-one-hue-foreach-theme-color('200') using($color) {
      :host(&:active) {
        border-color: $color;
        background-color: $color;
      }
    }
  }

  &[checking] {
    @include ods-and-all-hue-foreach-theme-color((
      1: '000',
      2: '100',
      3: '500'
    )) using($colors) {
      @include osds-tile-on-selected-host() {
        &:after {
          background-image: linear-gradient(transparent, transparent),
          linear-gradient(45deg, map_get($colors, 3), map_get($colors, 2), map_get($colors, 3), map_get($colors, 2));
        }
      }
    }
  }
}

@mixin osds-tile-theme-color-variant-stroked {
  @include ods-and-all-hue-foreach-theme-color((
          background-color: '000',
          border-color: '200'
  )) using($colors) {
    @include osds-tile-on-selected-host() {
      border-color: map_get($colors, border-color);
      background-color: map_get($colors, background-color);
    }
  }

  &[hoverable]:not([disabled]) {
    @include ods-and-one-hue-foreach-theme-color('100') using($color) {
      :host(&:hover) {
        background-color: $color;
      }
    }
    @include ods-and-one-hue-foreach-theme-color('200') using($color) {
      :host(&:active) {
        background-color: $color;
      }
    }
  }

  &[checked] {
    @include ods-and-one-hue-foreach-theme-color('500') using($color) {
      :host(&), :host(&:hover) {
        border-color: $color;
      }
    }
  }

  &[checking] {
    @include ods-and-all-hue-foreach-theme-color((
            1: '000',
            2: '100',
            3: '500'
    )) using($colors) {
      @include osds-tile-on-selected-host() {
        &:after {
          background-image: linear-gradient(transparent, transparent),
          linear-gradient(45deg, map_get($colors, 3), map_get($colors, 2), map_get($colors, 3), map_get($colors, 2));
        }
      }
    }
  }
}

@mixin osds-tile-theme-color-variant-ghost {
  @include ods-and-all-hue-foreach-theme-color(()) using($colors) {
    @include osds-tile-on-selected-host() {
      border-color: transparent;
      background-color: transparent;
    }
  }

  &[hoverable]:not([disabled]) {
    @include ods-and-one-hue-foreach-theme-color('100') using($color) {
      :host(&:hover) {
        border-color: $color;
        background-color: $color;
      }
    }
    @include ods-and-one-hue-foreach-theme-color('200') using($color) {
      :host(&:active) {
        border-color: $color;
        background-color: $color;
      }
    }
  }

  &[checked] {
    @include ods-and-one-hue-foreach-theme-color('500') using($color) {
      :host(&), :host(&:hover) {
        border-color: $color;
      }
    }
  }

  &[checking] {
    @include ods-and-all-hue-foreach-theme-color((
            1: '000',
            2: '100',
            3: '500'
    )) using($colors) {
      @include osds-tile-on-selected-host() {
        &:after {
          background-image: linear-gradient(transparent, transparent),
          linear-gradient(45deg, map_get($colors, 3), map_get($colors, 2), map_get($colors, 3), map_get($colors, 2));
        }
      }
    }
  }
}

@mixin osds-tile-theme-color-variant-hollow {
  @include ods-and-all-hue-foreach-theme-color((
          border-color: '200'
  )) using($colors) {
    @include osds-tile-on-selected-host() {
      border-color: map_get($colors, border-color);
      background-color: transparent;
    }
  }

  &[hoverable]:not([disabled]) {
    @include ods-and-one-hue-foreach-theme-color('100') using($color) {
      :host(&:hover){
        background-color: transparent;
        border-color: $color;
      }
    }
    @include ods-and-one-hue-foreach-theme-color('200') using($color) {
      :host(&:active) {
        background-color: transparent;
        border-color: $color;
      }
    }
  }

  &[checked] {
    @include ods-and-one-hue-foreach-theme-color('500') using($color) {
      :host(&), :host(&:hover) {
        border-color: $color;
      }
    }
  }

  &[checking] {
    @include ods-and-all-hue-foreach-theme-color((
            1: '000',
            2: '100',
            3: '500'
    )) using($colors) {
      @include osds-tile-on-selected-host() {
        &:after {
          background-image: linear-gradient(transparent, transparent),
          linear-gradient(45deg, map_get($colors, 3), map_get($colors, 2), map_get($colors, 3), map_get($colors, 2));
        }
      }
    }
  }
}

@mixin osds-tile-theme-color() {

  /** base colors */
  :host {
    border-color: transparent;
  }

  /** disabled colors */
  [disabled] {
    @include osds-tile-on-selected-host() {
      opacity: .5;
    }
  }

  /** no variant specified: flat variant colors */
  :not([variant]),
  [variant='default']{
    @include osds-tile-theme-color-variant-stroked();
  }

  /** stroked variant colors */
  [variant='stroked'] {
    @include osds-tile-theme-color-variant-stroked();
  }

  /** flat variant colors */
  [variant='flat'] {
    @include osds-tile-theme-color-variant-flat();
  }

  /** ghost variant colors */
  [variant='ghost'] {
    @include osds-tile-theme-color-variant-ghost();
  }

  /** ghost variant colors */
  [variant='hollow'] {
    @include osds-tile-theme-color-variant-hollow();
  }
}
