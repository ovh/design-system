@use '../../../../../style/button';

// Ensure the hit area of the web-component is the same as the inside button (for hover triggering for example)
:host(.ods-button) {
  display: inline-block;
  border-radius: button.$ods-button-border-radius-md;
  height: inherit;
}

:host(.ods-button__border-radius--xs) {
  border-radius: button.$ods-button-border-radius-xs;
}

.ods-button {
  &__button {
    $button: &;

    @include button.ods-button();

    position: relative;

    &--xs {
      @include button.ods-button-size('xs');
    }

    &--sm {
      @include button.ods-button-size('sm');
    }

    &--md {
      @include button.ods-button-size('md');
    }

    &--default {
      &#{$button}--critical {
        @include button.ods-button-variant-default('critical');
      }

      &#{$button}--neutral {
        @include button.ods-button-variant-default('neutral');
      }

      &#{$button}--primary {
        @include button.ods-button-variant-default('primary');
      }
    }

    &--ghost {
      &#{$button}--critical {
        @include button.ods-button-variant-ghost('critical');
      }

      &#{$button}--neutral {
        @include button.ods-button-variant-ghost('neutral');
      }

      &#{$button}--primary {
        @include button.ods-button-variant-ghost('primary');
      }
    }

    &--outline {
      &#{$button}--critical {
        @include button.ods-button-variant-outline('critical');
      }

      &#{$button}--neutral {
        @include button.ods-button-variant-outline('neutral');
      }

      &#{$button}--primary {
        @include button.ods-button-variant-outline('primary');
      }
    }

    &--icon-right {
      flex-direction: row-reverse;
    }

    &__spinner {
      display: flex;
      position: absolute;
      inset: 0;
      align-items: center;
      justify-content: center;
      background-color: var(--ods-color-neutral-100);
    }
  }
}
